# Simplified single-stage Dockerfile for Railway
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Install Python package manager
RUN pip install uv

# Copy and install Python dependencies
COPY python/pyproject.toml python/uv.lock ./
ENV UV_HTTP_TIMEOUT=120
RUN uv sync --group server --group mcp --no-dev

# Copy Python source
COPY python/src ./src
COPY migration ./migration

# Install and build frontend
COPY archon-ui-main/package*.json ./frontend/
WORKDIR /app/frontend
RUN npm ci --no-audit --no-fund

COPY archon-ui-main/ ./
RUN npm run build

# Back to app directory
WORKDIR /app

# No supervisor needed - run FastAPI directly

# Set environment variables
ENV PYTHONPATH=/app
ENV PATH="/app/.venv/bin:$PATH"
ENV PROD=true
ENV FRONTEND_DIST_PATH=/app/frontend/dist

# Expose port for Railway (Railway will provide PORT env var)
EXPOSE 8080

# Copy and setup entrypoint script
COPY docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

# Use entrypoint script to handle PORT variable
ENTRYPOINT ["/app/docker-entrypoint.sh"]