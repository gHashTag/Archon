# Simplified single-stage Dockerfile for Railway
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    nodejs \
    npm \
    nginx \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Install Python package manager
RUN pip install uv

# Copy and install Python dependencies
COPY python/pyproject.toml python/uv.lock ./
ENV UV_HTTP_TIMEOUT=120
RUN uv sync --group server --group mcp --no-dev

# Copy Python source
COPY python/src ./src
COPY migration ./migration

# Install and build frontend
COPY archon-ui-main/package*.json ./frontend/
WORKDIR /app/frontend
RUN npm ci --no-audit --no-fund

COPY archon-ui-main/ ./
RUN npm run build

# Back to app directory
WORKDIR /app

# No Nginx config needed - FastAPI will serve everything

# Configure Supervisor (only FastAPI on Railway PORT)
RUN printf '[supervisord]\n\
nodaemon=true\n\
user=root\n\
\n\
[program:archon-server]\n\
command=/app/.venv/bin/python -m uvicorn src.server.main:app --host 0.0.0.0 --port %%(ENV_PORT)s\n\
directory=/app\n\
autostart=true\n\
autorestart=true\n\
stderr_logfile=/var/log/archon-server.err.log\n\
stdout_logfile=/var/log/archon-server.out.log\n\
environment=PATH="/app/.venv/bin:%%(ENV_PATH)s",PORT="%%(ENV_PORT)s"\n' > /etc/supervisor/conf.d/archon.conf

# Set environment variables
ENV PYTHONPATH=/app
ENV PATH="/app/.venv/bin:$PATH"
ENV PROD=true
ENV PORT=8080
ENV FRONTEND_DIST_PATH=/app/frontend/dist

# Expose port for Railway
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8080}/health || exit 1

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]